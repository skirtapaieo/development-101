@startuml

!define SPRITESURL https://raw.githubusercontent.com/PlantUML/sprites/v1.3

!define GIT_SPRITE(sprite_name) SPRITESURL/GitHub/Light/${sprite_name}.png
!define JAVA_SPRITE(sprite_name) SPRITESURL/Java/${sprite_name}.png
!define BUILD_SPRITE(sprite_name) SPRITESURL/Tools/${sprite_name}.png
!define CLOUD_SPRITE(sprite_name) SPRITESURL/Cloud/${sprite_name}.png

!define FOLDER_SPRITE SPRITESURL/Common/Folder.png
!define DATABASE_SPRITE SPRITESURL/Database/Database.png
!define TESTING_SPRITE SPRITESURL/Testing/Test.png
!define MONITOR_SPRITE SPRITESURL/Network/monitor.png

!define ARROW_COLOR #707070
!define ARROW_THICKNESS 1

package "Version Control" {
    [Git Repository] as git
    git ..> [Codebase] as codebase
}

package "Build System" {
    [Build Tool] as buildTool
    [Dependencies] as dependencies
    [Compilation] as compilation
    [Testing] as testing
    [Code Quality] as codeQuality
    [Artifact Generation] as artifact
}

package "Deployment Pipeline" {
    [Continuous Integration/Continuous Deployment (CI/CD)] as cicd
    [Build Trigger] as trigger
    [Build Environment] as buildEnv
    [Packaging] as packaging
    [Deployment] as deployment
}

package "Monitoring and Reporting" {
    [Monitoring] as monitoring
    [Reporting] as reporting
}

package "Additional Components" {
    [Static Code Analysis] as codeAnalysis
    [Notifications and Alerts] as notifications
}

package "Development Environment" {
    [Integrated Development Environment (IDE)] as ide
}

cloud {
    [Production Environment] as prodEnv
}

git --> codebase

ide --> codebase
buildTool --> dependencies
dependencies --> codebase
compilation --> dependencies
testing --> compilation
codeQuality --> compilation
artifact --> testing
artifact --> packaging
packaging --> artifact
deployment --> packaging
cicd --> trigger
trigger --> cicd
buildEnv --> cicd
buildEnv --> buildTool
monitoring --> prodEnv
reporting --> prodEnv
notifications --> cicd
notifications --> prodEnv
codeAnalysis --> codeQuality

codebase ..> ide
prodEnv ..> deployment

@enduml
