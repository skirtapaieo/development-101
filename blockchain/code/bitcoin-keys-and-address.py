from bitcoin import *

# each of the steps involve complex mathematical and cryptographic functions...  

# Generate a new private key
# In Bitcoin a number between 1 and 2^256, perfectly random, returned in hexadecimal (see example below code)
private_key = random_key()

# Generate the public key from the private key
# In Bitcoin secp256k1 standard is used to generate the number 
public_key = privtopub(private_key)

# Generate a Bitcoin address from the public key
# 1 - The public key is hashed by SHA-256 and RIPEMD160 hash functions 
# 2 - A version byte is added - 0x00 in the main Bitcoin network 
# 3 - A checksum is generated by hashing the the results with SHA-256 twice and taking the first 4 bytes as result. the checksum is added at the end. 
# 4 - the result is encoded using Base58-encoding. gives final result. 
address = pubtoaddr(public_key)

# Examples: 

# Private Key
# A 64-character long hexadecimal string 
# 3ce80c0803a8c75a8ed9283f1a500b3718e6b6fbf385b5298b7261eab2e55e3e

# Public Key
# A 130-character hexadecimal string (uncompressed) 
# 043d5f265d1ab24395c8d570a267ed503c6741157c2727a28d8fe398a4ea051cda69aa4c636b2e56269867d45be6af1a92f6322a65c8b477b739b27cd8f6e71777

# Address (Pay to Public Key Hash - P2PKH)
# 1NKRhS7iYUGTaAfaR5z8BueAJesqaTyc4a
